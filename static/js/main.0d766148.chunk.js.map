{"version":3,"sources":["img/persik.png","panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["module","exports","Home","id","go","fetchedUser","properties","title","before","photo_200","src","description","city","first_name","last_name","size","level","onClick","data-to","vk","balance","rub","points","osName","platform","Persik","props","left","IOS","className","persik","alt","type","a","axios","post","then","data","style","padding","backgroundColor","cursor","App","useState","activePanel","setActivePanel","setUser","popout","setPopout","undefined","setProperties","useEffect","bridge","send","user","fetch","api_url","json","subscribe","detail","schemeAttribute","document","createAttribute","value","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0d766148.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport Button from '@vkontakte/vkui/dist/components/Button/Button';\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\nimport Cell from '@vkontakte/vkui/dist/components/Cell/Cell';\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\n// import View from '@vkontakte/vkui/dist/components/View/View';\n// import List from './List';\n\nconst Home = ({ id, go, fetchedUser, properties }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Це пизда</PanelHeader>\n\t\t{fetchedUser &&\n\t\t\t<Group title=\"User Data Fetched with VK Bridge and API DataBase\">\n\t\t\t\t<Cell\n\t\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200} /> : null}\n\t\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t\t>\n\t\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t\t</Cell>\n\t\t\t</Group>}\n\n\t\t<Group title=\"Navigation Block\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"persik\">\n\t\t\t\t\tКак получить баллы\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\n\t\t{/* <View activePanel=\"list\">\n  <Panel id=\"list\">\n    <PanelHeader>\n      List\n    </PanelHeader>\n    <Group>\n      <List>\n        <Cell expandable before={<Icon28UserOutline />}>Учетная запись</Cell>\n        <Cell expandable before={<Icon28SettingsOutline />}>Основные</Cell>\n        <Cell expandable before={<Icon28PrivacyOutline />}>Приватность</Cell>\n      </List>\n    </Group>\n  </Panel>\n</View> */}\n\n\t\t{properties.vk &&\t\t\n\t\t<p>{`ВК: ${properties.vk} баллы: ${properties.balance} рубли: ${properties.rub} заработано сегодня: ${properties.points}`}</p>}\n\t\t\n\n\t</Panel>\n);\n\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\nimport axios from \"axios\";\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tПушистый пидорас\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t\t<button\n        type=\"button\"\n        onClick={async () => {\n        //   try {\n        //     await axios({\n        //       url: \"https://google.com/\",\n        //       params: {\n        //         sendBalance: 100000\n        //       },\n        //       method: \"GET\",\n        //       data: null\n        //     }).then(({ data }) => {\n        //       return data;\n        //     });\n        //   } catch (e) {\n        //     console.log(\"Sending error\", e);\n\t\t//   }\n\t\taxios.post(`http://185.255.135.122:90/testapi`, {\n\t\t\t\"test\": 1231\n\t\t}).then(({ data }) => {\n\t\t\t      return data;\n\t\t\t    });\n\t\t\t//   } catch (e) {\n\t\t\t//     console.log(\"Sending error\", e);\n\t\t\t//   }\n        }}\n        style={{ padding: 20, backgroundColor: \"red\", cursor: \"pointer\" }}\n      >\n        Send to ....\n      </button>\n\t\t<p>1</p>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [properties, setProperties] = useState([{vk: undefined, balance: undefined, rub: undefined, points: undefined}])\n\n\tuseEffect(() => {\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t\t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t\t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t\t\t}\n\t\t});\n\t\tasync function fetchData() {\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t\t\tsetUser(user);\n\t\t\tsetPopout(null);\n\t\t\tconst API_KEY = \"C4D52C8426DAC\";\n\t\t\tconst api_url = await fetch(`https://likebot.ru/data?token=${API_KEY}&id=${user.id}`);\n\t\t\tconst data = await api_url.json();\n\t\t\t\t\n\t\tsetProperties({\n\t\t\tvk: data.vk,\n\t\t\tbalance: data.balance,\n\t\t\trub: data.rub,\n\t\t\tpoints: data.points\n\t\t  });\n\t\t}\n\t\t\n\t\tfetchData();\n\t}, []);\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\n\treturn (\n\t\t<View activePanel={activePanel} popout={popout}>\n\t\t\t<Home id='home' fetchedUser={fetchedUser} properties={properties} go={go} />\n\t\t\t<Persik id='persik' go={go} />\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}